const CONST_X_COUNT = 20;
const CONST_Y_COUNT = 10;
const CONST_WEEK_NAME = ['Sun.','Mon.','Tue.','Wed.','Thu.','Fri.','Sat.'];
const CONST_HEAD_ROTATE_SPEED = 0.05;
const CONST_SEC1_SWING_SPEED = 0.1;
const CONST_SEC2_SWING_SPEED = 0.2;
const CONST_TAIL_SWING_SPEED = 0.3;

var headCircle = {x:0, y:0, radius:0};
var head = {x:0, y:0, angle:0, clockwise:true};
var section1 = {length:0, angle:0, maxAngle:30, swingDir:1};
var section2 = {length:0, angle:-30, maxAngle:30, swingDir:1};
var tail = {length:0, angle:0, maxAngle:30, swingDir:-1};

window.onload = function()
{
	$('#svg-container').css({
		width: window.innerWidth,
		height: window.innerHeight
	});
	$('#svg-area').attr('viewBox', '0 0 ' + window.innerWidth + ' ' + window.innerHeight);

	headCircle.x = window.innerWidth / 4;
	headCircle.y = window.innerHeight / 2;
	headCircle.radius = Math.min(window.innerWidth / 8, window.innerHeight / 4);

	section1.length = 3 * window.innerWidth / 12;
	section2.length = 2 * section1.length;
	tail.length = 3 * section1.length;

	$('#text-content').text(currentTime());

	setInterval(() => {
		$('#text-content').text(currentTime());
	}, 1000);

	setInterval(() => {
		updateTextPath();
	}, 10);

//	$(document).mousemove(mousemoveHandler);
};

function updateTextPath()
{
	// calculate head position
	head.x = headCircle.x + headCircle.radius * Math.cos(dia(head.angle));
	head.y = headCircle.y + headCircle.radius * Math.sin(dia(head.angle));

	// calculate section 1
	section1.x = head.x + section1.length * Math.cos(dia(section1.angle));
	section1.y = head.y + section1.length * Math.sin(dia(section1.angle));
	section1.angle += section1.swingDir * CONST_SEC1_SWING_SPEED * easyTo(section1.angle, section1.maxAngle);
	if (Math.abs(section1.angle) >= section1.maxAngle) section1.swingDir = -1 * section1.swingDir;

	// calculate section 2
	section2.x = head.x + section2.length * Math.cos(dia(section2.angle));
	section2.y = head.y + section2.length * Math.sin(dia(section2.angle));
	section2.angle += section2.swingDir * CONST_SEC2_SWING_SPEED * easyTo(section2.angle, section2.maxAngle);
	if (Math.abs(section2.angle) >= section2.maxAngle) section2.swingDir = -1 * section2.swingDir;

	// calculate tail
	tail.x = head.x + tail.length * Math.cos(dia(tail.angle));
	tail.y = head.y + tail.length * Math.sin(dia(tail.angle));
	tail.angle += tail.swingDir * CONST_TAIL_SWING_SPEED * easyTo(tail.angle, tail.maxAngle);
	if (Math.abs(tail.angle) >= tail.maxAngle) tail.swingDir = -1 * tail.swingDir;

	let newPath = 'M ' + xyPair(head) + ' C ' + xyPair(section1) + ' ' + xyPair(section2) + ' ' + xyPair(tail);
	$('#timeT-text-path').attr('d', newPath);

	head.angle = (head.angle + CONST_HEAD_ROTATE_SPEED) % 360;
}

function mousemoveHandler(event)
{
	$('.floating-box').each(function(){
		let thisId = $(this).attr('id');
		let deltaX = (boxCenter[thisId].x - event.pageX) / 30;
		let deltaY = (boxCenter[thisId].y - event.pageY) / 30;
		let delta = Math.max(10, Math.max(Math.abs(deltaX), Math.abs(deltaY)));
	
		$(this).css({
			'box-shadow' : deltaX+'px '+deltaY+'px '+delta+'px '+delta+'px rgb(214, 214, 214)'
		});
	});
}

function currentTime()
{
	let now = new Date();
	let yyyy = now.getFullYear();
	let mm = numberToString(now.getMonth(), 2);
	let dd = numberToString(now.getDate(), 2);
	let hr = numberToString(now.getHours(), 2);
	let mi = numberToString(now.getMinutes(), 2);
	let ss = numberToString(now.getSeconds(), 2);
	let ww = now.getDay();

	let timeStr = yyyy + '-' + mm + '-' + dd + ' (' + CONST_WEEK_NAME[ww] + ') ' + hr + ':' + mi + ':' + ss;
	return timeStr;
}

function numberToString(number, digital) {
	return ('000' + number).slice(-1 * digital);
}

function xyPair(xy) {
	return xy.x + ' ' + xy.y;
}

function dia(ang) {
	return ang * Math.PI / 180;
}

function easyTo(angle, maxAngle) {
	return Math.cos(dia(90 * angle / (maxAngle+5)));
}